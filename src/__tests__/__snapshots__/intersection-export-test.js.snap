// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`interesection-export 1`] = `
"'use strict';

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _T = require('./T');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\"Cannot call a class as a function\\"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\"); } return call && (typeof call === \\"object\\" || typeof call === \\"function\\") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== \\"function\\" && superClass !== null) { throw new TypeError(\\"Super expression must either be null or a function, not \\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require('react');

var babelPluginFlowReactPropTypes_proptype_U = Object.assign({}, (_T.bpfrp_babelPluginFlowReactPropTypes_proptype_T || _propTypes2.default.func) === require('prop-types').any ? {} : _T.bpfrp_babelPluginFlowReactPropTypes_proptype_T || _propTypes2.default.func, {
  foo: require('prop-types').string.isRequired
});
if (typeof exports !== 'undefined') Object.defineProperty(exports, 'babelPluginFlowReactPropTypes_proptype_U', {
  value: babelPluginFlowReactPropTypes_proptype_U,
  configurable: true
});

var C = function (_React$Component) {
  _inherits(C, _React$Component);

  function C() {
    _classCallCheck(this, C);

    return _possibleConstructorReturn(this, (C.__proto__ || Object.getPrototypeOf(C)).apply(this, arguments));
  }

  return C;
}(React.Component);

C.propTypes = Object.assign({}, (_T.bpfrp_babelPluginFlowReactPropTypes_proptype_T || _propTypes2.default.func) === require('prop-types').any ? {} : _T.bpfrp_babelPluginFlowReactPropTypes_proptype_T || _propTypes2.default.func, {
  foo: require('prop-types').string.isRequired
});
exports.default = C;"
`;
